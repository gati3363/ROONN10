#Load raw data
train <- read.csv("train.csv", header = TRUE)
test <- read.csv("test.csv", header = TRUE)

#Add a "Survived" Variable to the test set to allow for combining data sets
test.survived <- data.frame(Survived = rep("None", nrow(test)),test[,])

#Combine data sets
data.combined <- rbind(train, test.survived)

# A bit about R data types (e.g.., factors)
str(data.combined)


data.combined$Survived <- as.factor(data.combined$Survived)
data.combined$Pclass <- as.factor(data.combined$Pclass)

#Take a look at Gross Survival rates
table(data.combined$Survived)

#Distribusion across classes
table(data.combined$Pclass)

#Load up ggplot2 package to use for visualisations
library(ggplot2)

#Hypothesis - Rich folks survived at a higer rate
train$Pclass <- as.factor(train$Pclass)
ggplot(train, aes(x= Pclass, fill = factor(Survived))) +
  geom_histogram(width = 0.5) +
  xlab("Pclass") +
  ylab("Total Count") +
  labs(fill = "Survived")

# Examine the first few names in the training data set
head(as.character(train$Name))

# How many unique names are there across both train and test?
length(unique(as.character(data.combined$Name)))

#  TWo duplicate names, take a closer look
# First, get the duplicate names and store them as a vector
dup.names  <- as.character(data.combined[which(duplicated(as.character(data.combined$Name))), "Name"])

# Next, take a look at the records in the combined data set
data.combined[which(data.combined$Name %in% dup.names),]
 
# What is up with the "Miss" and "Mr." thing?
library(stringr)

# Any correlation with other variables (e.g., sibsp)?
misses <- data.combined[which(str_detect(data.combined$Name, "Miss. ")),]
misses[1:10,]

# Hypothesis - name titles correlate with age 
mrses <- data.combined[which(str_detect(data.combined$Name, "Mrs.")),]
mrses [1:5,]

# Check out males to see if pattern continues
males <- data.combined[which(train$Sex == "male"), ]
males [1:5,]

# Expand upon the relationship between 'survived' and 'Pclass' by adding the new 'Title' variable to the 
# data set and then explore a potential 3-dimensional relationship. 

# Create a utility function to help with title extraction. 

extractTitle <- function(Name) {
  Name <- as.character(Name)
  
if (length(grep("Miss. ", Name)) > 0){
  return ("Miss. ")
    } else if (length(grep("Master. ", Name)) > 0) {
  return ("Master. ")  
    } else if (length(grep("Mrs. ", Name)) > 0) {
  return ("Mrs. ")
    } else if (length(grep("Mr. ", Name)) > 0) {
  return ("Mr. ")
 } else {
    return ("Other")
    }
}

titles <- NULL
for (i in 1:nrow(data.combined)) {
  titles <- c(titles, extractTitle(data.combined[i, "Name"]))
}
data.combined$title <- as.factor(titles)

# since we only have survived lables for the train set, only use the first 891 rows 
ggplot(data.combined[1:891,], aes(x = title, fill = Survived)) +
  stat_count(width = 0.5) +
  facet_wrap(~Pclass) +
  ggtitle("Pclass") +
  xlab("Title") +
  ylab("Total Count") +
  labs(fill = "Survived")
 
#What's the distribution of females to males accross train & test?
table(data.combined$Sex)

#Visulize the 3-way relationship of sex, pclass, and survival, compare to analysis. 

ggplot(data.combined[1:891,], aes(x = Sex, fill = Survived)) +
  stat_count(width = 0.5) +
  facet_wrap(~Pclass) +
  ggtitle("Pclass") +
  xlab("Sex") +
  ylab("Total Count") +
  labs(fill = "Survived")

#OK, age and sex seem pretty important as derived from analysis of title,
# take a look at the distribution of the age over entire data set
summary(data.combined$Age)
summary(data.combined[1:891,"Age"])

#Just to be through, take a look at survival rates broken out by sex, pclass.
ggplot(data.combined[1:891,], aes(x = Age, fill = Survived)) +
  facet_wrap(~Sex + Pclass) +
  geom_histogram(binwidth = 10) +
  xlab("Age") +
  ylab("Total Count")
   
#Validate that "Master."  is a good proxy for male children.
boys <- data.combined[which(data.combined$title == "Master. "),]
summary(boys$Age)

#We know that "Miss. " is more complicated, let's examine further.
misses <- data.combined[which(data.combined$title == "Miss. "),]
summary(misses$Age)

ggplot(misses[misses$Survived != "None",], aes (x = Age, fill = Survived)) +
  facet_wrap(~Pclass) +
  geom_bar(width = 5) +
  theme(plot.title = element_text(lineheight=.8, face="bold"))+
  ggtitle("Age for Miss.' by Pclass") +
  xlab("Age") +
  ylab("Total Count")

#Ok, appears female children may have different survival rate, ((((((((NOT GETTING THE RESULT))))))))
# could be a candidate for feature engineering later. ((((((NOT GETING THE RESULT))))))
misses.alone1 <- misses[which(misses$SibSp == 0 & misses$Parch== 0),]
summary(misses.alone1$Age)
length(which(misses.alone1$Age <= 14.5))

# move on to the sibsp variable, summerize the variable 
summary(data.combined$SibSp)

# can we treat as a factor?
length(unique(data.combined$SibSp))

data.combined$SibSp <- as.factor(data.combined$SibSp)

# we believe title is predictive. visualize survival reates by sibsp, pclass, title.
ggplot(data.combined[1:891,],aes(x = SibSp, fill = Survived)) +
  geom_bar(width = 1) +
  theme(plot.title = element_text(lineheight=.8, face="bold"))+
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("Sibsp") +
  ylab("Total Count") +
  ylim(0,300) +
  labs(fill = "Survived")

# Treat the parch variable as a factor and visualize.
data.combined$Parch <- as.factor(data.combined$Parch)
ggplot(data.combined[1:891,], aes(x = Parch, fill = Survived)) +
  geom_bar(width = 1) +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("Parch") +
  ylab("Total Count") +
  ylim(0,300) +
  labs(count = "Survived")


# Let's try some feature engineering, what about creating a family size feature?
temp.sibsp <- c(train$SibSp, test$SibSp)
temp.parch <- c(train$Parch, test$Parch)
data.combined$family.size <- as.factor(temp.sibsp + temp.parch + 1)

# Visualize it to see if it is preditctive 
ggplot(data.combined[1:891,], aes(x = family.size, fill = Survived)) +
  geom_bar(width = 1) +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("family.size") +
  ylab("Total Count") +
  ylim(0,300) +
  labs(fill = "Survived")

# take a look at the ticket variable
str(data.combined$Ticket)

# Based on the huge number of levels ticket really isn't a factor variable it is a string.
# Convert it and display first 20
data.combined$Ticket <- as.character(data.combined$Ticket)
data.combined$Ticket[1:20]

#There's no immidiately apparent structure in the data, let's see if we can find some. 
# We'll start with taking a look at just the first char for each.
Ticket.first.char <- ifelse(data.combined$Ticket == "", " ", substr(data.combined$Ticket, 1, 1))
unique(Ticket.first.char)

# OK, we can make a factor for analysis purpose and visualize.
data.combined$Ticket.first.char <- as.factor(Ticket.first.char)

# First, a high-level plot of the data
ggplot(data.combined[1:891,], aes(x = Ticket.first.char, fill = Survived)) +
    geom_bar() +
    ggtitle("Survivability by ticket.first.char") +
    xlab("ticket.first.char") +
    ylab("Total Count") +
    ylim(0,350) +
    labs(fill = "survived")

# Ticket seems like it might be predictive, drill down a bit.
ggplot(data.combined[1:891,], aes(x = Ticket.first.char, fill = Survived)) +
    geom_bar() +
    facet_wrap(~Pclass) +
    ggtitle("Pclass") +
    xlab("ticket.first.char") +
    ylab("Total Count") +
    ylim(0,150) +
    labs(fill = "Survived")

# Lastly, see if we get a pattern when using combination of Pclass and title.
ggplot(data.combined[1:891,], aes(x = Ticket.first.char, fill = Survived)) +
    geom_bar() +
    facet_wrap(~Pclass + title) +
    ggtitle("Pclass, Title") +
    xlab("ticket.first.char") +
    ylab("Total Count") +
    ylim(0,200) +
    labs(fill = "Survived")
     
# next up - the fares titanic passanger paid
summary(data.combined$Fare)
length(unique(data.combined$Fare))


# Can't make fare a factor, treat as numeric & visulizing with histogram
ggplot(data.combined, aes(x = Fare)) +
  geom_histogram(binwidth = 5) +
  ggtitle("Combined fare Distribution") +
  xlab("Fare") +
  ylab("Total Count") +
  ylim(0,200)

# Let's check to see if fare has predictive power
ggplot(data.combined[1:891,], aes(x = Fare, fill = Survived)) +
  geom_histogram(binwidth = 15) +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title" ) +
  xlab("Fare") +
  ylab("Total Count") +
  ylim(0,50) +
  labs(fill = "Survived")


# Analysis of the cabin variable
str(data.combined$Cabin)


# Cabin really isn't a factor, make a string and display first 100
data.combined$Cabin <- as.character(data.combined$Cabin)
data.combined$Cabin[1:100]

# Replace empty cabins with a "U"
data.combined[which(data.combined$Cabin == ""), "Cabin"] <- "U"
data.combined$Cabin[1:100]

# Take a look at just the first char as a factor
Cabin.first.char <- as.factor(substr(data.combined$Cabin, 1, 1))
str(Cabin.first.char)
levels(Cabin.first.char)

# Add to combined data set and plot
data.combined$Cabin.first.char <- Cabin.first.char

# High level plot
ggplot(data.combined[1:891,], aes(x = Cabin.first.char, fill = Survived)) +
    geom_bar() +
    ggtitle("Survivability by cabin.first.char") +
    xlab("Cabin.first.char") +
    ylab("Total count") +
    ylim(0,750) +
    labs(fill = "Survived")

# Could have some predictive power, drill in 
ggplot(data.combined[1:891,], aes(x = Cabin.first.char, fill = Survived)) +
  geom_bar() +
  facet_wrap(~Pclass) +
  ggtitle("Survivability by cabin.first.char") +
  xlab("Pclass") +
  ylab("Total Class") +
  ylim(0,500) +
  labs(fill = "Survived")

# Does this feature improve upon pclass + title ?
ggplot(data.combined[1:891,], aes(x = Cabin.first.char, fill = Survived)) +
  geom_bar() +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("cabin.first.char") +
  ylab("Total Class") +
  ylim(0,500) +
  labs(fill = "Survived")


# What about folks with multiple cabins?
data.combined$Cabin.multiple <- as.factor(ifelse(str_detect(data.combined$Cabin, " "), "Y", "N"))

ggplot(data.combined[1:891,], aes(x = Cabin.multiple, fill = Survived)) +
  geom_bar() +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("cabin.multiple") +
  ylab("Total Class") +
  ylim(0,350) +
  labs(fill = "Survived")

# Does survivability depend on where you got onboard the Titanic?
str(data.combined$Embarked)
levels(data.combined$Embarked)


# Plot data for analysis 
ggplot(data.combined[1:891,], aes(x = Embarked, fill = Survived)) +
  geom_bar() +
  facet_wrap(~Pclass + title) +
  ggtitle("Pclass, Title") +
  xlab("Embarked") +
  ylab("Total Class") +
  ylim(0,300) +
  labs(fill = "Survived")


# Exploratary modeling 
Library(randomForest) 


# Train a random forest with the deafult parameters using pclass & titles
rf.train.1 <- data.combined[1:891, c("Pclass","title")]
rf.label <- as.factor(train$Survived)

set.seed(1234)
rf.1 <- randomForest(x = rf.train.1, y = rf.label, importance = TRUE, ntree = 1000)
rf.1 
varImpPlot(rf.1)


# Train the random forest using pclass, title & sissp
rf.train.2 <- data.combined[1:891, c("Pclass", "title", "SibSp")]

set.seed(1234)
rf.2 <- randomForest(x = rf.train.2, y = rf.label, importance = TRUE, ntree = 1000 )
rf.2
varImpPlot(rf.2)

# Train the random forest using pclass, title & Parch
rf.train.3 <- data.combined[1:891, c("Pclass", "title", "Parch")]

set.seed(1234)
rf.3 <- randomForest(x = rf.train.3, y = rf.label, importance = TRUE, ntree = 1000 )
rf.3
varImpPlot(rf.3)


# Train the random forest using pclass, title, sibsp & Parch
rf.train.4 <- data.combined[1:891, c("Pclass", "title", "SibSp", "Parch")]

set.seed(1234)
rf.4 <- randomForest(x = rf.train.4, y = rf.label, importance = TRUE, ntree = 1000 )
rf.4
varImpPlot(rf.4)


# Train the random forest using pclass, title & family size
rf.train.5 <- data.combined[1:891, c("Pclass", "title", "family.size")]

set.seed(1234)
rf.5 <- randomForest(x = rf.train.5, y = rf.label, importance = TRUE, ntree = 1000 )
rf.5
varImpPlot(rf.5)
